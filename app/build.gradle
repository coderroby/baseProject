apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
ext.versionMajor = 1 // 1 to 99
ext.versionMinor = 0 // 0 to 99
ext.versionPatch = 0 // 0 to 999
ext.versionClassifier = null
ext.versionClassifierCodes = ['SNAPSHOT': 0, 'APLHA': 1, 'BETA': 2, 'RC1': 3, 'RC2': 4, 'RELEASE': 5].withDefault {
    0
}

ext.isSnapshot = true
ext.minimumSdkVersion = 19
def isSplitAPK = false

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.myres.noban.mykotlinmvpproject"
        minSdkVersion 15
        targetSdkVersion 28
        versionCode generateVersionCode()
        versionName generateVersionName()
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ['autovaluegson.defaultCollectionsToEmpty': 'true']
            }
        }
    }
    buildTypes {
        debug {
            applicationIdSuffix '.dev'
            buildConfigField 'boolean', 'REPORT_CRASHES', 'true'
            buildConfigField 'String', 'BASE_URL', '"https://5a9cb963.ngrok.io/api/"'
            buildConfigField 'String', 'API_URL', '"text.com/api/v1/"'
        }
        release {
            minifyEnabled false
            buildConfigField 'String', 'BASE_URL', '"http://test.com/"'
            buildConfigField 'String', 'API_URL', '"http://test.com/api/v1/"'
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    splits {
        density {
            enable isSplitAPK
            exclude 'ldpi', 'tvdpi'
            compatibleScreens 'small', 'normal', 'large', 'xlarge'
        }
    }
    bundle {
        language {
            enableSplit = true
        }
        density {
            enableSplit = true
        }
        abi {
            enableSplit = true
        }
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }

}
private Integer generateVersionCode() {
    def versionCode = ext.versionMajor * 1000000 + ext.versionMinor * 10000 + ext.versionPatch * 10 + ext.versionClassifierCodes.get(ext.versionClassifier)
    println 'VersionCode ' + versionCode
    return versionCode
}

private String generateVersionName() {
    String versionName = "${ext.versionMajor}.${ext.versionMinor}.${ext.versionPatch}"
    if (ext.versionClassifier == null) {
        if (ext.isSnapshot) {
            ext.versionClassifier = "SNAPSHOT"
        }
    }

    if (ext.versionClassifier != null && ext.versionClassifier != "RELEASE") {
        versionName += "-" + ext.versionClassifier
    }
    println 'VersionName ' + versionName
    return versionName
}
android.applicationVariants.all { variant ->
    variant.outputs.each { output ->
        output.outputFileName = "MeenaClick-${output.versionCode}-${variant.versionName}-${variant.name}.apk"
    }
}
kapt {
    generateStubs = true
}
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.0.0-beta01'


    implementation 'androidx.core:core-ktx:1.1.0-alpha04'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.dynamicanimation:dynamicanimation:1.0.0'
    implementation 'androidx.browser:browser:1.0.0'
    implementation 'androidx.exifinterface:exifinterface:1.0.0'
    implementation 'androidx.multidex:multidex:2.0.1'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.0-alpha4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0-alpha4'

    implementation 'com.google.android.material:material:1.0.0'
    // https://github.com/ReactiveX/RxJava
    implementation 'io.reactivex.rxjava2:rxjava:2.2.4'
    // https://github.com/ReactiveX/RxAndroid
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'

    // retrofit https://github.com/square/retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    // retrofit adapter for rx
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"

    //GSON
    implementation 'com.google.code.gson:gson:2.8.5'

     //Auto Value
    annotationProcessor 'com.gabrielittner.auto.value:auto-value-with:1.0.0'
    annotationProcessor 'com.google.auto.value:auto-value:1.6'
    annotationProcessor 'com.ryanharter.auto.value:auto-value-gson:0.8.0'
    compileOnly 'com.google.auto.value:auto-value:1.6'
    compileOnly 'com.ryanharter.auto.value:auto-value-gson:0.8.0'
    annotationProcessor 'com.google.auto.value:auto-value:1.5'
    compileOnly 'com.jakewharton.auto.value:auto-value-annotations:1.5'
    // Glide

    // https://github.com/orhanobut/logger
    implementation 'com.orhanobut:logger:2.2.0'

    // https://github.com/orhanobut/hawk (SharedPreferences)
    implementation 'com.orhanobut:hawk:2.0.1'
    // https://github.com/square/okhttp
    implementation "com.squareup.okhttp3:okhttp:$okHttpVersion"
    // okhttp3 cookie jar https://github.com/franmontiel/PersistentCookieJar
    implementation 'com.github.franmontiel:PersistentCookieJar:v1.0.1'
    // https://github.com/ihsanbal/LoggingInterceptor
    implementation 'org.jetbrains:annotations:15.0'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'

    implementation('com.github.ihsanbal:LoggingInterceptor:3.0.0') {
        exclude group: 'org.json', module: 'json'
        // https://github.com/google/dagger
        implementation "com.google.dagger:dagger:$daggerVersion"
        implementation "com.google.dagger:dagger-android:$daggerVersion"
        implementation "com.google.dagger:dagger-android-support:$daggerVersion"
        kapt "com.google.dagger:dagger-compiler:$daggerVersion"
        kapt "com.google.dagger:dagger-android-processor:$daggerVersion"
    }
}
